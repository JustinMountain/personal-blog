http { 
  
  include mime.types;

  # Setup cache for static files
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
  
  # Setup rate limiting
  set_real_ip_from        0.0.0.0/0;
  real_ip_recursive       on;
  real_ip_header          X-Forward-For;
  limit_req_zone          $binary_remote_addr zone=mylimit:10m rate=10r/s;

  # Describes where the application lives
  # Can have multiple instances here and nginx will round robin requests to each instance
  upstream application_upstream {
    # server 192.168.1.241:3000; # IP address of the server and port
    server nextapplication:3000; # name of Docker container and port
  }

  # The same can be done for a backend, if applicable
  # upstream backendserver {
  #   server host.docker.internal:3005;
  # }

  # Defines where nginx is listening on the host machine
  server {
    listen 80;
    server_name localhost;
    root /nginxproxy;
    limit_req zone=mylimit burst=70 nodelay;

    # Reverse proxy the application to port 80
    location / {
      proxy_pass                    http://application_upstream;
      proxy_http_version            1.1;
      proxy_set_header              Upgrade $http_upgrade;
      proxy_set_header              Connection 'upgrade';
      proxy_set_header              Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_pass_request_headers    on;       
    }

    # Can pass another service via a second port to another endpoint
    # location /backend_api {
    #   proxy_pass                    http://backend_upstream;
    #   proxy_http_version            1.1;
    #   proxy_set_header              Upgrade $http_upgrade;
    #   proxy_set_header              Connection 'upgrade';
    #   proxy_set_header              Host $host;proxy_cache_bypass $http_upgrade;
    #   proxy_pass_request_headers    on;       
    # }

    location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://application_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

    
  }
}

events {}
